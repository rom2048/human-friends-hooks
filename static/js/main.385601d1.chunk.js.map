{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","phone","website","className","alt","src","CardList","humans","cardArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","App","useState","setHumans","setSearchfield","count","setCount","useEffect","fetch","then","response","json","users","filtredHumans","filter","human","toLowerCase","includes","console","log","length","onClick","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAgBeA,EAdF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtC,OACE,sBAAKC,UAAU,2DAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BP,EAA1B,eACpB,gCACE,6BAAKC,IACL,4BAAIC,IACJ,4BAAIC,IACJ,4BAAIC,WCWGI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAClC,OAAO,cAAC,EAAD,CAELb,GAAIS,EAAOI,GAAGb,GACdC,KAAMQ,EAAOI,GAAGZ,KAChBC,MAAOO,EAAOI,GAAGX,MACjBC,MAAOM,EAAOI,GAAGV,MACjBC,QAASK,EAAOI,GAAGT,SALdS,MAQT,OACE,8BACGH,KCDQI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,kCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEHI,G,MARA,SAACC,GACd,OACE,qBAAKhB,UAAU,aAAf,SACGgB,EAAMC,aC2CEC,MA5Cf,WAQE,MAA4BC,mBAAS,IAArC,mBAAOf,EAAP,KAAegB,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOT,EAAP,KAAoBW,EAApB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIT,EAAUS,QAC1B,CAACP,IAEJ,IAIMQ,EAAgB1B,EAAO2B,QAAO,SAAAC,GAClC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASxB,EAAYuB,kBAGvD,OADAE,QAAQC,IAAIhC,EAAQM,GACZN,EAAOiC,OAGX,sBAAKrC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,oBACA,sBAAKA,UAAU,gCAAf,UACE,wBAAQA,UAAU,6DAA6DsC,QAAS,kBAAMf,EAASD,EAAQ,IAA/G,uBACA,mBAAGtB,UAAU,iBAAb,SAA+BsB,OAEjC,cAAC,EAAD,CAAWX,aAjBM,SAAC4B,GACtBlB,EAAekB,EAAMC,OAAOC,UAiBxB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUrC,OAAQ0B,SAVxB,0CCpBWY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.385601d1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email, phone, website }) => {\r\n  return (\r\n    <div className=\"tc grow bg-light-purple br2 shadow-3 ma3 pa3 br3 bw2 dib\">\r\n      <img alt='human' src={`https://robohash.org/${id}?set=set5`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        <p>{phone}</p>\r\n        <p>{website}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\nconst CardList = ({ humans }) => {\r\n  const cardArray = humans.map((user, i) => {\r\n    return <Card \r\n      key={i}\r\n      id={humans[i].id}\r\n      name={humans[i].name}\r\n      email={humans[i].email}\r\n      phone={humans[i].phone}\r\n      website={humans[i].website}\r\n      />\r\n  });\r\n  return (\r\n    <div>\r\n      {cardArray}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--black bg-light-purple'\r\n        type='search'\r\n        placeholder='search humans'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className=\"scroll-box\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList/CardList';\r\nimport SearchBox from '../components/SearchBox/SearchBox';\r\nimport Scroll from '../components/Scroll/Scroll';\r\n\r\nfunction App() {\r\n  // constructor() {\r\n  //   super()\r\n  //   this.state = {\r\n  //     humans: [],\r\n  //     searchfield: ''\r\n  //   }\r\n  // }\r\n  const [humans, setHumans] = useState([])\r\n  const [searchfield, setSearchfield] = useState('')\r\n  const [count, setCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => setHumans(users))\r\n  }, [count]) \r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchfield(event.target.value)\r\n  }\r\n\r\n  const filtredHumans = humans.filter(human => {\r\n    return human.name.toLowerCase().includes(searchfield.toLowerCase());\r\n  })\r\n  console.log(humans, searchfield);\r\n  return !humans.length ? \r\n    <h1>Loading</h1> :\r\n    (\r\n      <div className='tc'>\r\n        <h1 className='f1'>Humans</h1>\r\n        <div className='flex justify-center flex-wrap'>\r\n          <button className='f6 link dim br-pill ph3 pv2 mb2 dib white bg-dark-blue ma2' onClick={() => setCount(count + 1)}>Click me!</button>\r\n          <p className=\"tc f1-l fw1red\">{count}</p>\r\n        </div>\r\n        <SearchBox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          <CardList humans={filtredHumans}/>\r\n        </Scroll>\r\n      </div>    \r\n    );\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}